{"version":3,"file":"static/js/671.f7e794bb.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/utils/validators.js","user/pages/Auth.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const filePickerRef = useRef();\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  console.log(file);\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const pickedHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    console.log(file);\r\n\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg, .png, .jpeg\"\r\n        ref={filePickerRef}\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl ? (\r\n            <img src={previewUrl} alt=\"preview\" />\r\n          ) : (\r\n            <p>Please pick an image.</p>\r\n          )}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n        {!isValid && <p>{props.errorText}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useEffect } from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { validate } from \"../../utils/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCHED\":\r\n      return { ...state, isTouched: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { onInput, id } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (e) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: e.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: \"TOUCHED\" });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        type={props.type}\r\n        onBlur={touchHandler}\r\n        placeholder={props.placeholder}\r\n        id={props.id}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        value={inputState.value}\r\n        rows={props.rows || 3}\r\n        id={props.id}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n\r\nexport default useForm;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport \"./Auth.css\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/utils/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst Auth = () => {\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  const { isLoading, isError, sendRequest, clearErrorHandler } =\r\n    useHttpClient();\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  const switchLoginHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode((prevState) => !prevState);\r\n  };\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `https://placify-eight.vercel.app/api/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          `https://placify-eight.vercel.app/api/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={isError} onClear={clearErrorHandler} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>{isLoginMode ? \"Login\" : \"Sign Up\"}</h2>\r\n        <hr />\r\n        <form onSubmit={loginHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              type=\"text\"\r\n              element=\"input\"\r\n              placeholder=\"Your Name\"\r\n              errorText=\"Please enter a name!\"\r\n              onInput={inputHandler}\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            label=\"E-mail\"\r\n            type=\"email\"\r\n            element=\"input\"\r\n            placeholder=\"E-mail\"\r\n            errorText=\"Please enter a valid email address!\"\r\n            onInput={inputHandler}\r\n            validators={[VALIDATOR_EMAIL()]}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            element=\"input\"\r\n            placeholder=\"Password\"\r\n            errorText=\"Please enter a valid password, atleast 6 characters!\"\r\n            onInput={inputHandler}\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n          />\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              onInput={inputHandler}\r\n              center\r\n              id=\"image\"\r\n              errorText=\"Please provide an image\"\r\n            />\r\n          )}\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchLoginHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["props","filePickerRef","useRef","_useState","useState","_useState2","_slicedToArray","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","isValid","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","console","log","_jsxs","className","children","_jsx","id","style","display","type","accept","ref","onChange","e","pickedFile","fileIsValid","target","files","length","onInput","concat","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","_objectSpread","value","val","validate","validators","isTouched","_useReducer","useReducer","initialValue","initialValid","_useReducer2","inputState","dispatch","changeHandler","touchHandler","element","onBlur","placeholder","rows","htmlFor","label","formReducer","formIsValid","inputId","inputs","_defineProperty","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","test","err","f","isLoginMode","setIsLoginMode","_useHttpClient","useHttpClient","isLoading","isError","sendRequest","clearErrorHandler","_useForm","useForm","email","password","_useForm2","inputHandler","setFormData","auth","useContext","AuthContext","loginHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","formData","_responseData","wrap","_context","prev","next","preventDefault","JSON","stringify","sent","login","userId","token","t0","FormData","append","name","image","t1","stop","_x","apply","arguments","React","ErrorModal","error","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","ImageUpload","disabled","inverse","undefined","prevState"],"sourceRoot":""}