{"version":3,"file":"static/js/842.876c4286.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/utils/validators.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"./PlaceForm.css\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/utils/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst NewPlace = () => {\r\n  const { isLoading, isError, clearErrorHandler, sendRequest } =\r\n    useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const placeSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      // formData.append(\"creator\", auth.userId);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_URL}/places`,\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: `Bearer ${auth.token}`,\r\n        }\r\n      );\r\n      navigate(\"/\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={isError} onClear={clearErrorHandler} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          onInput={inputHandler}\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title!\"\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          onInput={inputHandler}\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description! (atleast 5 characters)\"\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          onInput={inputHandler}\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address!\"\r\n        />\r\n        <ImageUpload\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image\"\r\n          id=\"image\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const filePickerRef = useRef();\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const pickedHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg, .png, .jpeg\"\r\n        ref={filePickerRef}\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl ? (\r\n            <img src={previewUrl} alt=\"preview\" />\r\n          ) : (\r\n            <p>Please pick an image.</p>\r\n          )}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n        {!isValid && <p>{props.errorText}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useEffect } from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { validate } from \"../../utils/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCHED\":\r\n      return { ...state, isTouched: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { onInput, id } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (e) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: e.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: \"TOUCHED\" });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        type={props.type}\r\n        onBlur={touchHandler}\r\n        placeholder={props.placeholder}\r\n        id={props.id}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        value={inputState.value}\r\n        rows={props.rows || 3}\r\n        id={props.id}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n\r\nexport default useForm;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["useHttpClient","isLoading","isError","clearErrorHandler","sendRequest","useForm","title","value","isValid","description","address","image","formState","inputHandler","auth","useContext","AuthContext","navigate","useNavigate","placeSubmitHandler","e","preventDefault","formData","FormData","append","inputs","process","Authorization","token","error","onClear","asOverlay","className","onSubmit","id","element","type","label","onInput","validators","VALIDATOR_REQUIRE","errorText","VALIDATOR_MINLENGTH","disabled","props","filePickerRef","useRef","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","style","display","accept","ref","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","touchHandler","onBlur","placeholder","rows","htmlFor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}