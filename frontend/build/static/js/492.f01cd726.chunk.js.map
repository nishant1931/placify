{"version":3,"file":"static/js/492.f01cd726.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/utils/validators.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"./PlaceForm.css\";\r\n\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/utils/validators\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport useForm from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nconst NewPlace = () => {\r\n  const { isLoading, isError, clearErrorHandler, sendRequest } =\r\n    useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const placeSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"title\", formState.inputs.title.value);\r\n      formData.append(\"description\", formState.inputs.description.value);\r\n      formData.append(\"address\", formState.inputs.address.value);\r\n      // formData.append(\"creator\", auth.userId);\r\n      formData.append(\"image\", formState.inputs.image.value);\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_URL}/places`,\r\n        \"POST\",\r\n        formData,\r\n        {\r\n          Authorization: `Bearer ${auth.token}`,\r\n        }\r\n      );\r\n      navigate(\"/\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={isError} onClear={clearErrorHandler} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          onInput={inputHandler}\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title!\"\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          onInput={inputHandler}\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description! (atleast 5 characters)\"\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          onInput={inputHandler}\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address!\"\r\n        />\r\n        <ImageUpload\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image\"\r\n          id=\"image\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const filePickerRef = useRef();\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  const pickedHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg, .png, .jpeg\"\r\n        ref={filePickerRef}\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl ? (\r\n            <img src={previewUrl} alt=\"preview\" />\r\n          ) : (\r\n            <p>Please pick an image.</p>\r\n          )}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n        {!isValid && <p>{props.errorText}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useEffect } from \"react\";\r\nimport { useReducer } from \"react\";\r\nimport { validate } from \"../../utils/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCHED\":\r\n      return { ...state, isTouched: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false,\r\n  });\r\n\r\n  const { onInput, id } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (e) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: e.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({ type: \"TOUCHED\" });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n        type={props.type}\r\n        onBlur={touchHandler}\r\n        placeholder={props.placeholder}\r\n        id={props.id}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        value={inputState.value}\r\n        rows={props.rows || 3}\r\n        id={props.id}\r\n        onBlur={touchHandler}\r\n        onChange={changeHandler}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity,\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n\r\nexport default useForm;\r\n","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\r\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\r\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\r\nconst VALIDATOR_TYPE_MIN = \"MIN\";\r\nconst VALIDATOR_TYPE_MAX = \"MAX\";\r\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\r\nconst VALIDATOR_TYPE_FILE = \"FILE\";\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MAXLENGTH = (val) => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val,\r\n});\r\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n"],"names":["_useHttpClient","useHttpClient","isLoading","isError","clearErrorHandler","sendRequest","_useForm","useForm","title","value","isValid","description","address","image","_useForm2","_slicedToArray","formState","inputHandler","auth","useContext","AuthContext","navigate","useNavigate","placeSubmitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","wrap","_context","prev","next","preventDefault","FormData","append","inputs","concat","process","Authorization","token","t0","stop","_x","apply","arguments","_jsxs","React","children","_jsx","ErrorModal","error","onClear","LoadingSpinner","asOverlay","className","onSubmit","Input","id","element","type","label","onInput","validators","VALIDATOR_REQUIRE","errorText","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","filePickerRef","useRef","_useState","useState","_useState2","file","setFile","_useState3","_useState4","previewUrl","setPreviewUrl","_useState5","_useState6","setIsValid","useEffect","fileReader","FileReader","onload","result","readAsDataURL","style","display","accept","ref","onChange","pickedFile","fileIsValid","target","files","length","center","src","alt","onClick","current","click","inputReducer","state","action","_objectSpread","val","validate","isTouched","_useReducer","useReducer","initialValue","initialValid","_useReducer2","inputState","dispatch","changeHandler","touchHandler","onBlur","placeholder","rows","htmlFor","formReducer","formIsValid","inputId","_defineProperty","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","trim","test","err","f"],"sourceRoot":""}